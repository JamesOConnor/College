import os, sys
sys.path.insert(0, "Scripts/InUse")
from TerraAll import *
from Aquaall import *
from glob import glob

def menu():
    data = {}
    sensor = raw_input("Would you like to look at - Terra, Aqua or both?").upper()
    if sensor not in ["TERRA", "AQUA", "BOTH"]:
        print "I don't understand! Try again!"
        menu()
    data["Sensor"] = sensor
    def year():
        year = int(raw_input("What year would you like to load? (Note: This user used 2008/2009)"))
        if year not in range(2000,2014):
                print "I don't understand! Try again!"
                year = int(raw_input("What year would you like to load? (Note: This user used 2008/2009)"))
                year()
        return year
    
    data["year"] = year()
    def filepath():
        root = raw_input("Please direct me to the directory containing the HDF files!")
        #http://stackoverflow.com/questions/13832095/python-search-a-directory
        for root, fpath, files in os.walk(os.path.abspath(root)):
            filelist = files  
            for i, w in enumerate(filelist):
                if ".hdf" in filelist[i]:
                    print "Excellent"
                else:
                    del filelist[i]
            if filelist == []:
                filepath()
            return filelist
    
   

    return data["Sensor"], data["year"]
sensor,year  = menu()

def implotter():

	pict = raw_input("What day would you like to view? ('Quit' to move on)")
		
	if pict == "Quit":
	    return
	elif int(pict) not in dict["doy"]:
	    print "That's not a day!"
	    implotter()

	else: 
		plt.imshow(dict["snowarray"][int(pict)])
		plt.show()
	quest=raw_input("Would you like to see another? (Yes/Quit)")
	if quest == "Yes":
	    implotter()
	elif quest == "Quit":
	    return
	else: 
		print "I don't understand!"
		implotter()


if sensor == "AQUA":
    dict = AquaData(year)
    implotter()
elif sensor == "TERRA":
    dict = TerraData(year)
    implotter()
elif sensor == "BOTH":
    Tdict = TerraData(year)
    Adict = AquaData(year)
    dict = {"TerraDict" : Tdict, "AquaDict" : Adict}
